# Choose an optional name for the datacenter
global:
  datacenter: dcanadillas
  name: consul
  image: "hashicorp/consul:1.12.0"
  tls:
    enabled: true
  acls:
    manageSystemACLs: true
    # We are setting the tokens to play around. Create first the secret:
    #   
    bootstrapToken:
      secretName: consul-acl-bootstrap-token
      secretKey: token
  metrics:
    enabled: true
    enableGatewayMetrics: true
  # We change from envoy-alpine image because we may want to deploy in K8s in ARM, so Envoy image can be ARM based
  imageEnvoy: envoyproxy/envoy:v1.22.0

# Enable the Consul Web UI via a NodePort
ui:
  service:
    # type: 'NodePort' <==== Change to this if using local Minikube or K8s with NodePort
    type: LoadBalancer
    enabled: true

# Enable Connect for secure communication between nodes
connectInject:
  enabled: true
  transparentProxy:
    defaultEnabled: true

client:
  enabled: true

# Use only one Consul server for local development
server:
  replicas: 1
  bootstrapExpect: 1

  disruptionBudget:
    enabled: true
    maxUnavailable: 0
  # We are setting the tokens to play around. For versions prior to 1.11 use "acl.tokens.master"
  extraConfig: |
    {
      "acl": {
        "tokens": {
          "initial_management": "C0nsulR0cks",
          "agent": "C0nsulR0cks"
        }
      }
    }

# apiGateway:
#   enabled: true
#   image: hashicorp/consul-api-gateway:0.1.0
#   managedGatewayClass:
#     enabled: true
#     serviceType: LoadBalancer
#     userHostPorts: true

ingressGateways:
  enabled: true
  defaults:
    replicas: 1
  
  gateways:
    - name: ingress-gateway
      service:
        type: LoadBalancer
      ports:
        - port: 8080
          nodePort: null
        - port: 8443
          nodePort: null

controller:
  enabled: true

prometheus:
  enabled: false

grafana:
  enabled: false