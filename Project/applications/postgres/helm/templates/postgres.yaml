---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Values.namespace }}
  labels:
    app: postgres
spec:
  ports:
    - name: http
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: postgres

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres
  namespace: {{ .Values.namespace }}
  labels:
    app: postgres
automountServiceAccountToken: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Values.namespace }}
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
        consul.hashicorp.com/connect-inject: "true"
        # consul.hashicorp.com/connect-service: "postgres"
        # consul.hashicorp.com/connect-service-protocol: "tcp"
    spec:
      serviceAccountName: postgres
      containers:
        - name: postgres
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          {{- with .Values.env }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}

          # only listen on loopback so only access is via connect proxy
          # args: ["-c", "listen_addresses=127.0.0.1"]
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "pgdata"
      volumes:
        - name: pgdata
          emptyDir: {}