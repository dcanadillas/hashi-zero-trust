apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis
  namespace: apps
  labels:
    app: redis
automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: apps
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - name: http
      protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: redis
  namespace: apps
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      service: redis
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "true"
      labels:
        app: redis
        service: redis
    spec:
      containers:
      - name: redis
        image: ${artifact.image}:${artifact.tag}
        imagePullPolicy: Always
        env:
        %{ for k,v in entrypoint.env }  
        - name: ${k}
          value: "${v}"
        %{ endfor }
        livenessProbe:
          failureThreshold: 30
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 5
        ports:
        - containerPort: 6379
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 5
      securityContext: {}
      serviceAccount: redis
      serviceAccountName: redis
