{{- if semverCompare ">=v0.0.8" .Values.image.version }}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: frontend

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
automountServiceAccountToken: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: frontend
      app: frontend
  template:
    metadata:
      labels:
        service: frontend
        app: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: "9701"
    spec:
      serviceAccountName: frontend
      containers:
        - name: frontend
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          {{- with .Values.env }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: {{ .Values.namespace }}
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx
  namespace: {{ .Values.namespace }}
  labels:
    app: nginx
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: {{ .Values.namespace }}
  labels:
    app: nginx
data:
  config: |
    # /etc/nginx/conf.d/default.conf
      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
      upstream frontend_upstream {
        server frontend:3000;
      }
      server {
        listen 80;
        server_name  localhost;
        server_tokens off;
        gzip on;
        gzip_proxied any;
        gzip_comp_level 4;
        gzip_types text/css application/javascript image/svg+xml;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        location /_next/static {
          proxy_cache STATIC;
          proxy_pass http://frontend_upstream;
          # For testing cache - remove before deploying to production
          # add_header X-Cache-Status $upstream_cache_status;
        }
        location /static {
          proxy_cache STATIC;
          proxy_ignore_headers Cache-Control;
          proxy_cache_valid 60m;
          proxy_pass http://frontend_upstream;
          # For testing cache - remove before deploying to production
          # add_header X-Cache-Status $upstream_cache_status;
        }
        location / {
          proxy_pass http://frontend_upstream;
        }
        location /api {
          proxy_pass http://public-api:8080;
        }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Values.namespace }}
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: "9701"
    spec:
      serviceAccountName: nginx
      volumes:
        - name: config
          configMap:
            name: nginx-configmap
            items:
              - key: config
                path: default.conf
      containers:
        - name: nginx
          image: nginx:alpine
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 80
          {{- with .Values.env }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d
              readOnly: true
{{- else }}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: frontend

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
automountServiceAccountToken: true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: {{ .Values.namespace }}
data:
  config: |
    # /etc/nginx/conf.d/default.conf
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # Proxy pass the api location to save CORS
        # Use location exposed by Consul connect
        location /api {
            # Uncomment following to use with Consul
            # proxy_pass http://127.0.0.1:8080;
            proxy_pass http://public-api:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: frontend
      app: frontend
  template:
    metadata:
      labels:
        service: frontend
        app: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/transparent-proxy-exclude-outbound-ports: "9701"
    spec:
      serviceAccountName: frontend
      volumes:
      - name: config
        configMap:
          name: nginx-configmap
          items:
          - key: config
            path: default.conf
      containers:
        - name: frontend
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 80
          {{- with .Values.env }}
          env:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d
              readOnly: true
{{- end }}